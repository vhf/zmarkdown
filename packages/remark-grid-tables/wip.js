/* eslint-disable no-console */
const { renderString, parse, inspect } = require('./base.js')({ headingShift: 1 })

/*
1. Write a plugin
2. `.use()` is in `processor` in `index.js`
3. `npm run wip`
4. Changing the markdown below or modifying your plugin will refresh your terminal
*/

const markdown = `

# Grid table

## Basic example

+-------+----------+------+
| Table Headings   | Here |
+-------+----------+------+
| Sub   | Headings | Too  |
+=======+==========+======+
| cell  | column spanning |
+ spans +----------+------+
| rows  | normal   | cell |
+-------+----------+------+
| multi | cells can be    |
| line  | *formatted*     |
|       | **paragraphs**  |
| cells |                 |
| too   |                 |
+-------+-----------------+

+---+---+---+
| A | B | C |
+===+===+===+
| D | E     |
|   +---+---+
|   | F | G |
+---+---+---+

+---+-------+
| A | B     |
|   +---+---+
|   | C | D |
|   +---+---+
|   | E     |
+---+-------+

+-----------+
| A         |
+---+---+---+
| B | C | D |
|   +---+   |
|   | E |   |
+---+---+---+

+---+---+---+
| C | D | E |
|   |   +---+
|   |   | F |
|   +---+---+
|   | G | H |
|   |   +---+
|   |   | I |
+---+---+---+

+---+---+---+
| A | B | C |
+---+   |   |
| D |   |   |
+---+---+   |
| E | F |   |
+---+   |   |
| G |   |   |
+---+---+---+

+---+---+---+---+
| A | B | C | D |
+---+---+---+---+
| E     | F     |
+-------+-------+
| G             |
+---------------+

+---------------+
| A             |
+-------+-------+
| B     | C     |
+---+---+---+---+
| D | E | F | G |
+---+---+---+---+


+---+---+---+---+---+---+
| A | B | C | D | E | F |
|   |   +---+---+   |   |
|   |   | G     |   |   |
|   +---+-------+---+   |
|   | H             |   |
+---+---------------+---+
| I                     |
+-----------------------+

+---+-------------------+
| A | B                 |
+===+===================+
| C |                   |
|   | +---+---+---+---+ |
|   | | D | E | F | G | |
|   | +---+---+---+---+ |
|   | | H             | |
|   | +---------------+ |
|   |                   |
+---+-------------------+

+---+---------------------------------------------------------------+---+
| H |                                                               |He |
+---+---+---------------------------------------+---+---+---+---+---+---+
|Li |Be |                                       | B | C | N | O | F |Ne |
+---+---+                                       +---+---+---+---+---+---+
|Na |Mg |                                       |Al |Si | P | S |Cl |Ar |
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
| K |Ca |Sc |Ti | V |Cr |Mn |Fe |Co |Ni |Cu |Zn |Ga |Ge |As |Se |Br |Kr |
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
|Rb |Sr | Y |Zr |Nb |Mo |Tc |Ru |Rh |Pd |Ag |Cd |In |Sn |Sb |Te | I |Xe |
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
|Cs |Ba |LAN|Hf |Ta | W |Re |Os |Ir |Pt |Au |Hg |Tl |Pb |Bi |Po |At |Rn |
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
|Fr |Ra |ACT|                                                           |
+---+---+---+-----------------------------------------------------------+
|                                                                       |
+-----------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
|Lanthanide |La |Ce |Pr |Nd |Pm |Sm |Eu |Gd |Tb |Dy |Ho |Er |Tm |Yb |Lu |
+-----------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
|Actinide   |Ac |Th |Pa | U |Np |Pu |Am |Cm |Bk |Cf |Es |Fm |Md |No |Lw |
+-----------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+

+---------+
| A       |
+---------+
Text at the end

+---------+
| A       |
+---------+
Text at the

## specific tests

In this examples, the second row should always be a full-cell

+---------------+
| A             |
+---------------+
| B | C         |
+---+---+---+---+
| D | E | F | G |
+---+---+---+---+

+---+-----------+
| A |           |
+---+-----------+
| B | C         |
+-------+---+---+
| D   E | F | G |
+-------+---+---+

+---+---+---+---+
| A | B | C | D |
+---+---+---+---+
| B | C         |
|               |
+---+---+---+---+
| D | E | F | G |
+---+---+---+---+

+---+---+---+---+
| A | B | C | D |
+---+---+---+---+
| B  | C        |
+---+---+---+---+
| D | E | F | G |
+---+---+---+---+

## Failing example

+--- A ---+

+---------+
+---------+

+---------+
| A       |
|         |

+---------+
| A       |
+=========+
| B       |
+=========+

+--- A ---+
|         |
+---------+
|         |
+---------+

Bug #107

+-----+-------+-------+-------+-------+-------+
|     | case1         | case2         | case3 |
+-----+-------+-------+-------+-------+-------+
|     | case4 | case5 | case6 | case7 |       |
+=====+=======+=======+=======+=======+=======+
|  X  |    X  |   X   |   X   |   X   |   X   |
+-----+-------+-------+-------+-------+-------+


`

/**
 *


 +---+-------------------+
 | A | B                 |
 +===+===================+
 | C |                   |
 |   | +---+---+---+---+ |
 |   | | D | E | F | G | |
 |   | +---+---+---+---+ |
 |   | | H             | |
 |   | +---------------+ |
 |   |                   |
 +---+-------------------+
 * @type {[type]}
 */

const now = String(new Date())
const dash = '='.repeat(Math.floor((80 - now.length) / 2))
console.log(`\n${dash}${now}${dash}${dash % 2 ? '' : '='}\n`)

console.log(renderString(markdown))

console.log(`\n${'-'.repeat(80)}\n`)

console.error(inspect(parse(markdown)))
